@{
    ViewBag.Title = "Добавление новой затрататы";
}

@model WeddingJule.Models.CreateExpenseViewModel

@using (Html.BeginForm("Create", "Expense", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div>
                @Html.LabelFor(model => model.expense.name)
                <div>
                    @Html.EditorFor(model => model.expense.name)
                    @Html.ValidationMessageFor(model => model.expense.name, "")
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.expense.price)
                <div>
                    @Html.EditorFor(model => model.expense.price)
                    @Html.ValidationMessageFor(model => model.expense.price, "")
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.expense.date)
                <div>
                    @Html.EditorFor(model => model.expense.date)
                    @Html.ValidationMessageFor(model => model.expense.date, "")
                </div>
            </div>            
            <div>
                @Html.LabelFor(model => model.expense.CategoryId)
                <div>
                    @Html.DropDownListFor(model => model.categoryId, Model.Categories as SelectList)
                </div>
            </div>
        }
    </div>
}

<script type="text/javascript">
        $(function () {
            $("input[type='date']")
                        .datepicker({ dateFormat: 'dd.mm.yy' })
                        .get(0).setAttribute("type", "text");
        });

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || Globalize.parseDate(value, 'dd.mm.yy', "ru");
        }


        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        };
</script>
