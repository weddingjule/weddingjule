@{
    ViewBag.Title = "Добавление новой затрататы";
}

@model WeddingJule.Models.CreateExpenseViewModel

<h2>Добавление новой затраты</h2>

@using (Html.BeginForm("Create", "Expense", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.expense.name, new { @class = "col-xs-2 control-label" })
        <div class="col-xs-10">
            @Html.EditorFor(model => model.expense.name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.expense.name)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.expense.price, new { @class = "col-xs-2 control-label" })
        <div class="col-xs-10">
            @Html.EditorFor(model => model.expense.price, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.expense.price)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.expense.date, new { @class = "col-xs-2 control-label" })
        <div class="col-xs-10">
            @Html.EditorFor(model => model.expense.date, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.expense.date)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.expense.CategoryId, new { @class = "col-xs-2 control-label" })
        <div class="col-xs-3">
            @Html.DropDownListFor(model => model.categoryId, Model.Categories as SelectList)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-xs-10">
            <input type="submit" class="btn btn-default" value="Добавить" />
        </div>
    </div>
}

<script type="text/javascript">
        $(function () {
            $("input[type='date']")
                        .datepicker({ dateFormat: 'dd.mm.yy' })
                        .get(0).setAttribute("type", "text");
        });

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || Globalize.parseDate(value, 'dd.mm.yy', "ru");
        }


        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        };
</script>
