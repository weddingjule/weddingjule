@{
    ViewBag.Title = "Добавление новой затрататы";
}

@model WeddingJule.Models.CreateExpenseViewModel

@using (Html.BeginForm("Create", "Expense", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Трата</dt>
                    <dd>@Html.EditorFor(m => m.expense.name)</dd>

                    <dt>@Html.LabelFor(m => m.expense.price)</dt>
                    <dd>@Html.EditorFor(m => m.expense.price)</dd>

                    <dt>@Html.LabelFor(m => m.expense.date)</dt>
                    <dd>@Html.EditorFor(m => m.expense.date)</dd>

                    <dt>Категория</dt>
                    <dd>@Html.DropDownListFor(model => model.categoryId, Model.Categories as SelectList)</dd>

                    <dd><input type="submit" value="Сохранить" /></dd>
                </dl>
            </div>
        }
    </div>
}

<script type="text/javascript">
        $(function () {
            $("input[type='date']")
                        .datepicker({ dateFormat: 'dd.mm.yy' })
                        .get(0).setAttribute("type", "text");
        });

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || Globalize.parseDate(value, 'dd.mm.yy', "ru");
        }


        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        };
</script>
